buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
  id "com.moowork.node" version "1.2.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

node {
  // Version of node to use.
  version = '9.11.1'

  // Version of npm to use.
  npmVersion = '5.6.0'

  // Base URL for fetching node distributions (change if you have a mirror).
  distBaseUrl = 'https://nodejs.org/dist'

  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true

  // Set the work directory for unpacking node
  workDir = file("${project.buildDir}/nodejs")

  // Set the work directory for NPM
  npmWorkDir = file("${project.buildDir}/npm")

  // Set the work directory where node_modules should be located
  nodeModulesDir = file("${project.projectDir}/src/main/client")
}

task testFrontEnd(type: NpmTask) {
  args = ['run', 'test']
}

task buildFrontEnd(type: NpmTask) {
  args = ['run', 'build']
}

testFrontEnd.dependsOn npm_install

test.dependsOn testFrontEnd

buildFrontEnd.dependsOn npm_install

jar.dependsOn buildFrontEnd